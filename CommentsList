package application;

import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

public class CommentsList {

    @SuppressWarnings("unchecked")
	public static void showCommentsList(Main main, List<String> ticketNames) {
        // Create a VBox for the comments list page
        VBox commentsListBox = new VBox(10);
        commentsListBox.setStyle("-fx-font-size: 13px; -fx-font-family: 'Comic Sans MS';");

        // Create a TableView to display comments
        TableView<CommentData> commentsTable = new TableView<>();
        commentsTable.setStyle("-fx-font-size: 12px; -fx-font-family: 'Comic Sans MS';");

        // Create columns for the TableView
        TableColumn<CommentData, String> ticketNameColumn = new TableColumn<>("Ticket Name");
        TableColumn<CommentData, String> commentColumn = new TableColumn<>("Comment");
        TableColumn<CommentData, String> dateColumn = new TableColumn<>("Date");

        // Associate data with columns
        ticketNameColumn.setCellValueFactory(new PropertyValueFactory<>("ticketName"));
        commentColumn.setCellValueFactory(new PropertyValueFactory<>("comment"));
        dateColumn.setCellValueFactory(new PropertyValueFactory<>("date"));

        // Add columns to the TableView
        commentsTable.getColumns().addAll(ticketNameColumn, commentColumn, dateColumn);

        // Fetch comments data from the database
        List<CommentData> commentsData = getCommentsData(main.connectToDatabase);

        // Populate the TableView with comments data
        ObservableList<CommentData> observableCommentsData = FXCollections.observableArrayList(commentsData);
        commentsTable.setItems(observableCommentsData);

        // Create a "Back" button
        Button backButton = new Button("Back");
        backButton.setOnAction(event -> main.startScreen(main.loadTicketsNameFromDataBase()));

        // Add components to the comments list VBox
        commentsListBox.getChildren().addAll(commentsTable, backButton);

        // Set the scene and show it
        Stage commentsStage = new Stage();
        commentsStage.setScene(new Scene(commentsListBox, 650, 400));
        commentsStage.setTitle("Saved Comments");
        commentsStage.show();
    }

    private static List<CommentData> getCommentsData(Connection connection) {
        List<CommentData> commentsData = FXCollections.observableArrayList();

        try {
            // Fetch comments from the database
            String query = "SELECT ticket_name, comment, date FROM Comments";
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                String ticketName = resultSet.getString("ticket_name");
                String comment = resultSet.getString("comment");
                String date = resultSet.getString("date");

                commentsData.add(new CommentData(ticketName, comment, date));
            }

            resultSet.close();
            preparedStatement.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return commentsData;
    }

    public static class CommentData {
        private final SimpleStringProperty ticketName;
        private final SimpleStringProperty comment;
        private final SimpleStringProperty date;

        public CommentData(String ticketName, String comment, String date) {
            this.ticketName = new SimpleStringProperty(ticketName);
            this.comment = new SimpleStringProperty(comment);
            this.date = new SimpleStringProperty(date);
        }

        public String getTicketName() {
            return ticketName.get();
        }

        public String getComment() {
            return comment.get();
        }

        public String getDate() {
            return date.get();
        }
    }
}
